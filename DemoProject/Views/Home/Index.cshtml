@using X.PagedList
@using X.Web.PagedList
@{
    ViewData["Title"] = "Home Page";
}

@model IPagedList<Blog>

<main class="site-main">
    <!--================Hero Banner start =================-->
    <section class="mb-30px">
        <div class="container">
            <div class="hero-banner">
                <div class="hero-banner__content">
                    <h3>Welcome</h3>
                    <h1>My Blog</h1>
                    
                </div>
            </div>
        </div>
    </section>
    <!--================Hero Banner end =================-->
    <!--================ Blog slider start =================-->
    @await Component.InvokeAsync("BlogSlider")




                
    <!--================ Blog slider end =================-->
    <!--================ Start Blog Post Area =================-->
    <section class="blog-post-area section-margin mt-4">
        <div class="container">
            <div class="row">
                <div class="col-lg-8">

                    @foreach(var item in Model )
                    {

                        string content = item.BlogContent;
                        string preview = content;

                        if (content.Length > 150)
                        {
                            int lastIndex = content.Substring(0,150).LastIndexOf(" ");
                            if (lastIndex > 0)
                            {
                                preview = content.Substring(0, lastIndex) + "...";
                            }
                            else
                            {
                                preview = content.Substring(0, 150) + "...";
                            }
                        }


                    <div class="single-recent-blog-post">
                        <div class="thumb">
                            <img class="img-fluid" src="~/BlogThumbnails/@item.BlogThumbnailImage" alt="">
                            <ul class="thumb-info">
                                
                                <li><a href="#"><i class="ti-notepad"></i>@item.CreatedTime</a></li>
                                <li><a href="#"><i class="ti-themify-favicon"></i>@item.Comments.Count</a></li>
                            </ul>
                        </div>
                        <div class="details mt-20">
                            <a href="blog-single.html">
                                <h3>
                                    @item.BlogTitle
                                </h3>
                            </a>
                            <p class="tag-list-inline">Tag: <a href="#">travel</a>, <a href="#">life style</a>, <a href="#">technology</a>, <a href="#">fashion</a></p>
                            <p>
                                    @preview
                            </p>
                            <a class="button" href="/Blogs/Blogdetails/@item.Id">Read More <i class="ti-arrow-right"></i></a>
                        </div>
                    </div>
                    }

                    
                    

                    



                   
                </div>




                <!-- Start Blog Post Siddebar -->
                @await Component.InvokeAsync("BlogSideContent")


            </div>
            <!-- End Blog Post Siddebar -->
        </div>
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayLinkToIndividualPages = true,
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
    </section>
    <!--================ End Blog Post Area =================-->
</main>